apply plugin: 'java'
apply plugin: 'idea'
 
repositories {
    mavenCentral()
}
 
dependencies {
    compile 'org.eclipse.jetty:jetty-server:9.2.20.v20161216'
    compile 'org.eclipse.jetty:jetty-servlet:9.2.20.v20161216'
    compile 'org.freemarker:freemarker:2.3.25-incubating'
    //Jero
    compile 'com.google.inject:guice:4.1.0'
    compile 'com.google.inject.extensions:guice-servlet:4.1.0'
    compile 'com.google.guava:guava:20.0'
    compile 'javax.ws.rs:jsr311-api:1.1.1'
    compile 'javax.inject:javax.inject:1'
    compile 'org.eclipse.jetty:jetty-webapp:9.2.20.v20161216'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.1'
    
    //compile files('lib/funsteroid-core-0.0.1-SNAPSHOT.jar', 'lib/funsteroid-web-0.0.1-SNAPSHOT.jar', 'lib/funsteroid-freemarker-0.0.1-SNAPSHOT.jar')
    compile fileTree(dir: 'lib', include: ['*.jar'])
}
 
sourceCompatibility = 1.8
targetCompatibility = 1.8
 
task(appRun, dependsOn: 'classes', type: JavaExec) {
    main = 'app.JeroApp'
    classpath = sourceSets.main.runtimeClasspath
}

sourceSets {
    main {
        output.resourcesDir = "build/classes/main"
    }
}
jar{
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
       attributes 'Main-Class': 'app.JeroApp'
    }
}